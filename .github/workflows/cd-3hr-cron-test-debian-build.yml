name: Cron Schedule 3 hr Test Java API Server Build on Debian

on:
  push:
    branches:
      - issue-125.bryan-nice
#  schedule:
#    - cron: '0 */3 * * *'

jobs:
  buildSenzingJavaApiServer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Hello world
        run: docker run hello-world
      - name: finding logs
        run: |
          ls -lart /
          ls -lart /var
          ls -lart /tmp
          ls -lart /data
          ls -lart /var/log
          cat /var/log/syslog
#      - name: Download Senzing Deb Package Onto Runner
#        id: download_senzing_deb
#        env:
#          SENZING_REPO_URL: https://senzing-staging-apt.s3.amazonaws.com/senzingstagingrepo_1.0.0-1_amd64.deb
#        run: |
#          wget ${SENZING_REPO_URL}
#          sudo apt-get -y install ./${SENZING_REPO_URL##*/}
#          rm -rf senzingrepo_1.0.0-1_amd64.deb
#          sudo apt-get update -y
#          sudo chown _apt /home/runner/work/senzing-api-server/senzing-api-server/
#          sudo apt-get download -o=dir::cache=${HOME} senzingapi senzingdata-v1
#          sudo chown runner /home/runner/work/senzing-api-server/senzing-api-server/
#      - name: Install Senzing Data Without Sqlite Dependency
#        id: install_senzing_data
#        run: sudo SENZING_ACCEPT_EULA=I_ACCEPT_THE_SENZING_EULA dpkg -i --ignore-depends=sqlite3,sqlite *senzingdata*deb
#      - name: Install Senzing Api Without Sqlite Dependency
#        id: install_senzing_api
#        run: sudo SENZING_ACCEPT_EULA=I_ACCEPT_THE_SENZING_EULA dpkg -i --ignore-depends=sqlite3,sqlite *senzingapi*deb
#      - name: Copy /opt/senzing to Runner working directory
#        id: copy_senzing_wrk_dir
#        run: sudo mv /opt/senzing ${HOME}/work/senzing-api-server/senzing-api-server/senzing
#      - name: Build Java API Server
#        id: build_java_api_server
#        env:
#          BASE_BUILDER_IMAGE: "senzing/base-image-debian:1.0.1"
#          GITHUB_HEAD_REF: ${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}
#          GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}
#          GITHUB_OWNER: Senzing
#          SENZING_G2_FILES: senzing
#          SENZING_G2_JAR_PATHNAME: ${HOME}/work/senzing-api-server/senzing-api-server/senzing/g2/lib/g2.jar
#        run: make docker-build
#      - name: Create Jira Issue on Build Failure
#        uses: Senzing/git-action-jira-issue-creation@1.0.0
#        id: create_jira_issue
#        if: failure()
#        env:
#          JIRA_API_TOKEN: ${{ secrets.JIRA_SECRET }}
#          JIRA_USERNAME: ${{ secrets.JIRA_USERNAME }}
#          JIRA_ACCOUNT_URL: ${{ secrets.JIRA_ACCOUNT_URL }}
#          JIRA_PROJECT: 'PBF'
#          JIRA_ISSUE_TYPE: 'Task'
#          JIRA_ISSUE_SUMMARY: 'Failed to build Debian test on GitHub Commit SHA ${{ github.sha }}'
#          JIRA_ISSUE_DESCRIPTION: |
#            The commit SHA is: _${{ github.sha }}_.
#
#            ${{ steps.build_java_api_server.outputs.build_log }}

