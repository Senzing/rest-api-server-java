name: Cron Schedule 3 hr Test Java API Server Build on Debian

on:
  push:
    branches:
      - issue-125.bryan-nice
#  schedule:
#    - cron: '0 */3 * * *'

jobs:
  cronBuildSenzingJavaApiServer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download Senzing Deb Package Onto Runner
        id: download_senzing_deb
        env:
          SENZING_REPO_URL: https://senzing-staging-apt.s3.amazonaws.com/senzingstagingrepo_1.0.0-1_amd64.deb
        run: |
          wget ${SENZING_REPO_URL} >> output.log 2>&1
          sudo apt-get -y install ./${SENZING_REPO_URL##*/} >> output.log 2>&1
          rm -rf senzingrepo_1.0.0-1_amd64.deb >> output.log 2>&1
          sudo apt-get update -y >> output.log 2>&1
          sudo chown _apt /home/runner/work/senzing-api-server/senzing-api-server/ >> output.log 2>&1
          sudo apt-get download -o=dir::cache=${HOME} senzingapi senzingdata-v1 >> output.log 2>&1
          sudo chown runner /home/runner/work/senzing-api-server/senzing-api-server/ >> output.log 2>&1
      - name: Install Senzing Data Without Sqlite Dependency
        id: install_senzing_data
        run: sudo SENZING_ACCEPT_EULA=I_ACCEPT_THE_SENZING_EULA dpkg -i --ignore-depends=sqlite3,sqlite *senzingdata*deb >> output.log 2>&1
      - name: Install Senzing Api Without Sqlite Dependency
        id: install_senzing_api
        run: sudo SENZING_ACCEPT_EULA=I_ACCEPT_THE_SENZING_EULA dpkg -i --ignore-depends=sqlite3,sqlite *senzingapi*deb >> output.log 2>&1
      - name: Copy /opt/senzing to Runner working directory
        id: copy_senzing_wrk_dir
        run: |
          sudo mkdir -p ${HOME}/work/senzing-api-server/senzing-api-server/g2/lib >> output.log 2>&1
          sudo mv /opt/senzing/g2/lib/g2.jar ${HOME}/work/senzing-api-server/senzing-api-server/g2/lib/g2.jar >> output.log 2>&1
      - name: Build Java API Server
        id: build_java_api_server
        run: |
          make \
            BASE_BUILDER_IMAGE="senzing/base-image-debian:1.0.1" \
            BASE_IMAGE="senzing/senzing-base:1.4.0" \
            GITHUB_HEAD_REF=${GITHUB_HEAD_REF:-${GITHUB_REF##*/}} \
            GITHUB_EVENT_NAME=${GITHUB_EVENT_NAME} \
            GITHUB_OWNER=Senzing \
            SENZING_G2_JAR_PATHNAME=${HOME}/work/senzing-api-server/senzing-api-server/g2/lib/g2.jar \
            SENZING_G2_JAR_VERSION=$(cat /opt/senzing/g2/g2BuildVersion.json | jq --raw-output '.VERSION') \
            docker-build >> output.log 2>&1
      - name: Create Jira Issue on Build Failure
        id: create_jira_issue
        #if: failure()
        run: |
          docker run --rm \
            -e JIRA_ISSUE_DESCRIPTION="The commit SHA is: _${{ github.sha }}_.\n$(cat output.log)" \
            -e JIRA_API_TOKEN=${{ secrets.JIRA_SECRET }} \
            -e JIRA_USERNAME=${{ secrets.JIRA_USERNAME }} \
            -e JIRA_ACCOUNT_URL=${{ secrets.JIRA_ACCOUNT_URL }} \
            -e JIRA_PROJECT=PBF \
            -e JIRA_ISSUE_TYPE=Task \
            -e JIRA_ISSUE_SUMMARY='Failed on GitHub Commit SHA ${{ github.sha }}: Senzing API server Debian build' \
            senzing/git-action-jira-issue-creation:1.0.0

